#!/usr/bin/env python
# ./playlist <playlist> <path>
import os
import sys

import utils

sys.path.append(os.path.join(os.getcwd(), '..'))

from generators import playlists


def seek(data, **kwargs):
    return [k['playlist'] for k in data if filter(kwargs.get, k.keys())][0]


def find_effects(playlist):
    effect_names = map(lambda k: k['name'], playlist)
    effects = dict(zip(effect_names, [[] for n in range(len(effect_names))]))

    [effects[k['name']].append(int(k['length'])) for k in playlist]

    return [(k, max(v)) for k, v in effects.items()]


if __name__ == '__main__':
    p = utils.parser()
    p.add_argument('playlist', help='name of the playlist to render')
    p.add_argument('output', help='output path')

    data = playlists.load(os.path.join(os.getcwd(), '..', 'src', 'playlists'))

    if data:
        args = p.parse_args()

        playlist = seek(data, name=args.playlist)
        effects = find_effects(playlist)

        for effect, length in effects:
            utils.export(effect, args.output, length)

        # TODO: get effects + max lengths and export
        #utils.export(effect, args.output, length)
        # TODO: export each effect mentioned in the playlist
        # fetch name + max length for each (need to use min for each at render)
        #utils.execute(args) utils.render(...)
